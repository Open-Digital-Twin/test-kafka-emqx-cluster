version: '3'

services:
  mqtt-cluster:
    image: "emqx/emqx:4.3.8"
    environment:
      - EMQX_ZONE__EXTERNAL__MAX_MQUEUE_LEN=0
      - EMQX_CLUSTER__DISCOVERY=etcd
      - EMQX_CLUSTER__ETCD__SERVER=http://etcd:2379
      - EMQX_CLUSTER__ETCD__PREFIX=emqcl
      - EMQX_CLUSTER__ETCD__NODE_TTL=1m
      - EMQX_ZONE__EXTERNAL__MQUEUE_PRIORITIES=A/A/A=10,A/E/E=5
    networks:
      default:
        aliases:
          - emqx_n1.mq.tt
    restart: always
  etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_ENABLE_V2=true
      - ETCDL_API=2
    networks:
      - default
    restart: always
  mqtt-client:
    image: "opendigitaltwin/dt-client-bytes:latest"
    depends_on:
      - mqtt-cluster
    environment:
      - RUST_LOG=info
      - CONTAINER_DELAY_S=20
      - MQTT_BROKER_ADDRESS=mqtt-cluster
      - MQTT_BROKER_PORT=1883
      - MQTT_CLIENT_QOS=1
      - MQTT_CLIENT_BUFFER_BYTE_SIZE=64
      - MQTT_CLIENT_MESSAGES_TO_SEND=1000
      - MQTT_CLIENT_MESSAGE_DELAY_MS=5
      - MQTT_CLIENT_TOPIC=A/A/A
    networks:
      - default
    command: dt-client-bytes
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - default
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - default
  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.1.0
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /tmp/custom/jars:/etc/kafka-connect/jars
    depends_on:
      - zookeeper
      - kafka
      - mqtt-cluster

networks:
  default:
